<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JS Playground 🎉</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>

    <header>
        <h1>Welcome to the Ultimate JavaScript Playground! 🎮</h1>
    </header>

    <!-- Buttons Section -->
    <section class="section">
        <button id="colorBtn">Click to Change Color</button>
        <p id="hoverText">Hover over this text!</p>
        <p id="keyPressResult">Type something here:</p>
    </section>

    <!-- Hidden Easter Egg -->
    <section class="section">
        <button id="secretBtn">Double-click me 😉</button>
        <p id="secretMessage" class="hidden">🎉 You found the secret!</p>
    </section>

    <!-- Tabs Section -->
    <section class="tabs section">
        <div class="tab-buttons">
            <button onclick="showTab('tab1')">Tab 1</button>
            <button onclick="showTab('tab2')">Tab 2</button>
        </div>
        <div id="tab1" class="tab-content active">Content of Tab 1</div>
        <div id="tab2" class="tab-content">Content of Tab 2</div>
    </section>

    <!-- Form Validation -->
    <section class="section">
        <form id="signupForm">
            <h2>Sign Up 📝</h2>
            <label>Email: <input type="email" id="email" required></label><br>
            <label>Password: <input type="password" id="password" required></label><br>
            <small id="feedback"></small><br>
            <button type="submit">Submit</button>
        </form>
    </section>

    <script src="script.js"></script>
</body>
</html>
🎨 style.css (optional but 🔥 recommended)
css
Copy
Edit
body {
    font-family: 'Segoe UI', sans-serif;
    padding: 20px;
    background: #f0f4f8;
    color: #333;
}

h1 {
    color: #0077cc;
    text-align: center;
}

.section {
    margin: 30px 0;
}

button {
    padding: 10px 20px;
    margin: 10px;
    cursor: pointer;
    background: #0077cc;
    color: white;
    border: none;
    border-radius: 5px;
    transition: 0.3s ease;
}

button:hover {
    background: #005fa3;
}

.hidden {
    display: none;
}

.tab-content {
    display: none;
    margin-top: 10px;
}

.tab-content.active {
    display: block;
}

input {
    margin: 10px 0;
    padding: 8px;
    width: 200px;
}
📜 script.js
javascript
Copy
Edit
// Event: Button click to change background color
document.getElementById('colorBtn').addEventListener('click', () => {
    document.body.style.backgroundColor = `hsl(${Math.random() * 360}, 80%, 90%)`;
});

// Event: Hover text changes
const hoverText = document.getElementById('hoverText');
hoverText.addEventListener('mouseover', () => {
    hoverText.textContent = "You're hovering! 🌟";
});
hoverText.addEventListener('mouseout', () => {
    hoverText.textContent = "Hover over this text!";
});

// Event: Keypress detection
document.addEventListener('keydown', (e) => {
    document.getElementById('keyPressResult').textContent = `You pressed: "${e.key}"`;
});

// Easter Egg: Double click
document.getElementById('secretBtn').addEventListener('dblclick', () => {
    document.getElementById('secretMessage').classList.remove('hidden');
});

// Tabs
function showTab(tabId) {
    document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.remove('active');
    });
    document.getElementById(tabId).classList.add('active');
}

// Form Validation
const form = document.getElementById('signupForm');
const emailInput = document.getElementById('email');
const passwordInput = document.getElementById('password');
const feedback = document.getElementById('feedback');

form.addEventListener('submit', (e) => {
    e.preventDefault();
    const email = emailInput.value;
    const password = passwordInput.value;

    if (!email.includes('@') || password.length < 8) {
        feedback.textContent = 'Please enter a valid email and password (min 8 chars).';
        feedback.style.color = 'red';
    } else {
        feedback.textContent = 'Looks good! ';
        feedback.style.color = 'green';
    }
});

// Bonus: Real-time password strength feedback
passwordInput.addEventListener('input', () => {
    if (passwordInput.value.length < 8) {
        feedback.textContent = 'Password too short!';
        feedback.style.color = 'orange';
    } else {
        feedback.textContent = '';
    }
});
